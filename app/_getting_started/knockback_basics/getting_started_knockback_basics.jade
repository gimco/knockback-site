extends ../../_layout/_layout_template

include ../../_layout/_layout_mixins

block title
  title Getting Started: Knockback.js Basics

block includes
  link(rel='stylesheet', href='stylesheets/tutorial.css')
  include ../../_demos/_demos_include_knockback_scripts

block navbar
  mixin pageNavbar('Getting Started', true)

block content
  section
    h1 Getting Started with Knockback.js: Knockback.js Basics

    p You can use Knockback to bind Backbone Models/Collections to your HTML/templates (View) using Knockout. This allows server or application changes to Models/Collections to be propagated automatically to your views using `Backbone.sync`
    h2 Using with a Backbone.Model
    h3 Creating a ko.observable() for each model attribute by hand:
    p 
      span You can create a ViewModel with Knockout observables for each Backbone.Model attribute using 
      a(href='docs_kb_observable.html') kb.observable
      span  for simple attributes (as below) or 
      a(href='docs_kb_view_model.html') kb.ViewModel
      span  for Backbone.Model attributes or 
      a(href='docs_kb_collection_observable.html') kb.CollectionObservable
      span .
    p Creating a ViewModel by hand is the best way to create optimized ViewModels.

    div.container-fluid
      div.row-fluid
        div.span8
          h4 View (HTML):
          pre
            include kb_observable.html.txt

          h4 ViewModel and Bindings:
          pre(data-for='cs')
            include kb_observable.coffee

          pre(data-for='js')
            include ../../../public/getting_started/knockback_basics/kb_observable.js

        div.span4
          h4 Live Result
          div.demos_result_box
            include kb_observable.html
            script(type='application/javascript', src='getting_started/knockback_basics/kb_observable.js')

    h3 Creating a ko.observable() automatically for each model attribute:
    p 
      span Creating a ViewModel with a Knockout observable for each Backbone.Model attribute automatically using a 
      a(href='docs_kb_view_model.html') kb.viewModel factory
      span  is a good way to rapidly prototype. Of course, it creates more Knockout observables than required which can be expensive in terms of unneccessary bloat.

    div.container-fluid
      div.row-fluid
        div.span8
          h4 View (HTML):
          pre
            include kb_view_model_computed.html.txt

          h4 Models, Collection, ViewModel, and Bindings:
          pre(data-for='cs')
            include kb_view_model_computed.coffee

          pre(data-for='js')
            include ../../../public/getting_started/knockback_basics/kb_view_model_computed.js

        div.span4
          h4 Live Result
          div.demos_result_box
            include kb_view_model_computed.html
            script(type='application/javascript', src='getting_started/knockback_basics/kb_view_model_computed.js')

    h2 Using with a Backbone.Collection
    h3 Create a kb.ViewModel automatically for each model in a collection:
    p 
      span In Knockback.js, a 
      a(href='docs_kb_collection_observable.html') kb.CollectionObservable
      span  can be used with a Backbone.Collection for many different purposes
      ul
        li 
          span generating/maintaining a sorted ko.observableArray of ViewModels for a list view
        li 
          span rendering 
          a(href='tutorial_relational_models.html') relationships between models
        li 
          span providing a selection list for 
          a(href='http://knockoutjs.com/documentation/selectedOptions-binding.html') a selectedOptions binding 
          span using Knockout.js
        li 
          span to 
          a(href='docs_kb_collection_observable.html#sorted_index') sort the Backbone.Models
          span  in a way distinctive to the Backbone.Collection models array
        li 
          span to 
           a(href='https://github.com/kmalakoff/knockback-todos/blob/master/app/todos-classic/src/viewmodels/footer.coffee') update model counts automatically
          span  when the model count changes
        li and many more!

    div.container-fluid
      div.row-fluid
        div.span8
          h4 View (HTML):
          pre
            include kb_collection.html.txt

          h4 Models, Collection, ViewModel, and Bindings:
          pre(data-for='cs')
            include kb_collection.coffee

          pre(data-for='js')
            include ../../../public/getting_started/knockback_basics/kb_collection.js

        div.span4
          h4 Live Result
          div.demos_result_box
            include kb_collection.html
            script(type='application/javascript', src='getting_started/knockback_basics/kb_collection.js')
