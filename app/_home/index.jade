extends ../_layout/_layout_template

include ../_layout/_layout_mixins
include ../_docs/_docs_mixins

block title
  title Knockback.js Home

block includes
  link(rel='stylesheet', href='stylesheets/index.css')

block navbar
  div.page.github_fork_me
    include ../_layout/_layout_github_fork_me
  mixin pageNavbar('Home', false)

block header
  include ../_layout/_layout_knockback_logo

block content

  section#content.animated.fadeIn

    .cols.wrapped
      .col: div.content
        h2 Dependencies
        p Knockback requires Knockout.js and Backbone.js (and therefore Underscore.js) to be already loaded on the page:
        ul
          li
            a(href='https://github.com/SteveSanderson/knockout/downloads/') Knockout.js
          li
            a(href='http://documentcloud.github.com/underscore/') Underscore.js
          li
            a(href='http://documentcloud.github.com/backbone/') Backbone.js
        p Optional dependencies:
        ul
          li
            a(href='https://github.com/kmalakoff/backbone-modelref') Backbone-ModelRef
            div  (for lazy loading)
          li
            a(href='https://github.com/PaulUithol/Backbone-relational/') Backbone-Relational
            div  (for inter-model dependency management)

      .col: div.content
        h2 Features
        ul
          li Localization
          li Knockout.js' bindings and automagical update
          li Backbone's sleek Model definition
          li Dynamic collection sorting
          li Two-way string formatting
      .col: div.content
        h2 Latest <small>0.16.0</small>
        ul
          li <a href='https://raw.github.com/kmalakoff/knockback/0.16.0/knockback.js'>Development</a> <small>71 KB</small>
          li <a href='https://raw.github.com/kmalakoff/knockback/0.16.0/knockback.min.js'>Production</a> <small>42 KB</small>
        p
          span Please look at the
          a(href='https://github.com/kmalakoff/knockback/wiki/Release-Notes')  release and upgrade notes
          span  if you are migrating from an earlier version.
        h2 Source
        :markdown
          You can find the source on [Github][0]. To provide feedback leave a message
          or [create an issue][1].

          [0]: https://github.com/kmalakoff/knockback
          [1]: https://github.com/kmalakoff/knockback/issues

    //
      .content
        h2 Some background
        p Both Knockout and Backbone have their strengths and weaknesses, but together they are amazing!
        p At the same time you can have the strong ORM provided by Backbone and the dynamic view-models that Knockout.js offers.

    div#comparison_table
    p
    .content
      table.comparison
        col
        col.mid
        col
        col.ref
        thead: tr
          th Backbone.js
          th.kb.mid Knockback.js
          th Knockout.js
          th.ref(title="Notes') !
        - var count = 0;
        - var refer = 'comparison-';
        - var descr = 'View description';
        tbody
          tr
            td.yes Bullet-proof ORM
            td.done &#9754;
            td.no Weak ORM
            td.hidden
          tr
            td.yes Built-in Serialization / Deserialization
            td.done &#9754;
            td.no Manual serialization
            td.ref!= ref(descr, refer, 1)
          tr
            td.no: abbr(title="Model/View/Controller') MVC
            td.done &#9755;
            td.yes: abbr(title="Model/View/ViewModel') MVVM
            td.hidden
          tr
            td.no Low level DOM maninulation
            td.done &#9755;
            td.yes Reduced jQuery effort
            td.hidden
          tr
            td.no Manual view updating
            td.done &#9755;
            td.yes <code>data-bind</code> based sorcery
            td.hidden
          tr
            td.yes Routing and history support
            td.done &#9754;
            td.no No routing
            td.ref!= ref(descr, refer, 2)
          tr
            td.no Blurred separation between: <br> Views | Controllers
            td.own Proper separation between: <br> Models | Views | Controllers (ViewModels)
            td.no Blurred separation between: <br> Models | Controllers (ViewModels)
            td.ref!= ref(descr, refer, 3)
          tr
            td.hidden
            td.own.dependent Cross-view Model state synchronization
            td.hidden
            td.hidden
          tr
            td.no Messy collection/view updating
            td.own Fully sorted and updated collection views
            td.hidden
            td.hidden
          tr
            td.hidden
            td.own View settings and control properties
            td.hidden
            td.ref!= ref(descr, refer, 4)
          tr
            td.hidden
            td.own.dependent Localization
            td.hidden
            td.hidden
    .content.notes
      h2 Notes
      section
        #comparison-1
          :markdown
            Serialization
            =============

            As you probably know, Backbone is known to have a fantastic syncing system built
            as close as possible to the RESTful pattern. And if this is not good for your
            application you can always opt to build a custom `Backbone.sync` or, if further
            granularity is required, you can customize a Model/Collection's own `sync` function.

            Knockout.js instead does not provide such a feature, and what it offers is a simple
            plugin to map into/from any JSON source.

            Knockback uses Backbone's models and collections, and this means that all the
            serialization features we all love are still there!

        #comparison-2
          :markdown
            Routing
            =======

            In Knockback, while using Knockout.js ViewModel pattern, we developed a full
            pattern that supports Backbone's routing solution.

      section
        #comparison-3
          :markdown
            (Im)proper use of tools
            =======================

            Too often, in a large Backbone application you find yourself building up views
            with too much logic in them, almost always requiring sub-state management. This is
            actually an improper use of views, which should be as logic-less as possible.

            But you *have* to do things like that, and Backbone doesn't help the developer
            solving this (ethical?) issue.

            In Knockout.js, this is not a problem, because ViewModels differ from Views
            exactly in this: they own states, methods and properties allowing the *views* to
            be logic-less.

            So Knockout solves the blurry View/Controller issue you'll find building large
            applications with Backbone. **But** because Knockout simply provides ViewModels and no
            Models, how can you build a proper MVC/MVVM? *Backbone to the rescue!*

            And the circle is complete: Models from Backbone, and Views/ViewModels from
            Knockout.js.

      section
        #comparison-4
          :markdown
            Views' settings
            ===============

            Following MVVM principles where a ViewModel is the "View's Model", and therefore
            owns its own properties and methods which are *then* reflected in the View
            itself, Knockback ViewModels can add View setting and control properties, which are not
            (and should not be!) owned by the model.

            What does this allow? Actual settings (*eg* colors for different priorities in a
            task list) to be applied on all the associated ViewModels, or...something more
            interesting, like an design pattern for localization.

            If you consider localized labels as observed properties, then you can understand
            how Knockback provides internationalization to your applications.

    .cols.wrapped
      .col: div.content
        h3 Projects Using Knockback.js
        p
          span Coming soon...
          a(href='https://github.com/kmalakoff/knockback-site/issues')  submit yours now!

      .col: div.content
        h3 Frameworks
        ul
          li
            a(href='https://github.com/thedrow/django-knockback') django-knockback
        p
        h3 Distributions
        ul
          li
            a(href='http://search.npmjs.org/#/knockback') npm registry
          li
            a(href='http://nuget.org/packages/Knockback.js') NuGet Gallery

      .col: div.content
        h3 Community Extensions
        ul
          li
            a(href='https://github.com/kmalakoff/knockback-inspector') Knockback-Inspector


block footer
  include ../_layout/_layout_knockback_credits